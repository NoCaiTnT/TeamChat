// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: email.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_email_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_email_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_email_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_email_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_email_2eproto;
namespace email {
class RegisterEmailReply;
struct RegisterEmailReplyDefaultTypeInternal;
extern RegisterEmailReplyDefaultTypeInternal _RegisterEmailReply_default_instance_;
class RetrieveEmailReply;
struct RetrieveEmailReplyDefaultTypeInternal;
extern RetrieveEmailReplyDefaultTypeInternal _RetrieveEmailReply_default_instance_;
class UserRegisterEmail;
struct UserRegisterEmailDefaultTypeInternal;
extern UserRegisterEmailDefaultTypeInternal _UserRegisterEmail_default_instance_;
class UserRetrieveEmail;
struct UserRetrieveEmailDefaultTypeInternal;
extern UserRetrieveEmailDefaultTypeInternal _UserRetrieveEmail_default_instance_;
}  // namespace email
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace email {

// ===================================================================


// -------------------------------------------------------------------

class UserRetrieveEmail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:email.UserRetrieveEmail) */ {
 public:
  inline UserRetrieveEmail() : UserRetrieveEmail(nullptr) {}
  ~UserRetrieveEmail() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserRetrieveEmail(::google::protobuf::internal::ConstantInitialized);

  inline UserRetrieveEmail(const UserRetrieveEmail& from)
      : UserRetrieveEmail(nullptr, from) {}
  UserRetrieveEmail(UserRetrieveEmail&& from) noexcept
    : UserRetrieveEmail() {
    *this = ::std::move(from);
  }

  inline UserRetrieveEmail& operator=(const UserRetrieveEmail& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserRetrieveEmail& operator=(UserRetrieveEmail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserRetrieveEmail& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserRetrieveEmail* internal_default_instance() {
    return reinterpret_cast<const UserRetrieveEmail*>(
               &_UserRetrieveEmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UserRetrieveEmail& a, UserRetrieveEmail& b) {
    a.Swap(&b);
  }
  inline void Swap(UserRetrieveEmail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserRetrieveEmail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserRetrieveEmail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserRetrieveEmail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserRetrieveEmail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserRetrieveEmail& from) {
    UserRetrieveEmail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserRetrieveEmail* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "email.UserRetrieveEmail";
  }
  protected:
  explicit UserRetrieveEmail(::google::protobuf::Arena* arena);
  UserRetrieveEmail(::google::protobuf::Arena* arena, const UserRetrieveEmail& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseremailFieldNumber = 1,
  };
  // string useremail = 1;
  void clear_useremail() ;
  const std::string& useremail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_useremail(Arg_&& arg, Args_... args);
  std::string* mutable_useremail();
  PROTOBUF_NODISCARD std::string* release_useremail();
  void set_allocated_useremail(std::string* value);

  private:
  const std::string& _internal_useremail() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_useremail(
      const std::string& value);
  std::string* _internal_mutable_useremail();

  public:
  // @@protoc_insertion_point(class_scope:email.UserRetrieveEmail)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr useremail_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_email_2eproto;
};// -------------------------------------------------------------------

class UserRegisterEmail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:email.UserRegisterEmail) */ {
 public:
  inline UserRegisterEmail() : UserRegisterEmail(nullptr) {}
  ~UserRegisterEmail() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserRegisterEmail(::google::protobuf::internal::ConstantInitialized);

  inline UserRegisterEmail(const UserRegisterEmail& from)
      : UserRegisterEmail(nullptr, from) {}
  UserRegisterEmail(UserRegisterEmail&& from) noexcept
    : UserRegisterEmail() {
    *this = ::std::move(from);
  }

  inline UserRegisterEmail& operator=(const UserRegisterEmail& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserRegisterEmail& operator=(UserRegisterEmail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserRegisterEmail& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserRegisterEmail* internal_default_instance() {
    return reinterpret_cast<const UserRegisterEmail*>(
               &_UserRegisterEmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UserRegisterEmail& a, UserRegisterEmail& b) {
    a.Swap(&b);
  }
  inline void Swap(UserRegisterEmail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserRegisterEmail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserRegisterEmail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserRegisterEmail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserRegisterEmail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserRegisterEmail& from) {
    UserRegisterEmail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserRegisterEmail* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "email.UserRegisterEmail";
  }
  protected:
  explicit UserRegisterEmail(::google::protobuf::Arena* arena);
  UserRegisterEmail(::google::protobuf::Arena* arena, const UserRegisterEmail& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseremailFieldNumber = 1,
  };
  // string useremail = 1;
  void clear_useremail() ;
  const std::string& useremail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_useremail(Arg_&& arg, Args_... args);
  std::string* mutable_useremail();
  PROTOBUF_NODISCARD std::string* release_useremail();
  void set_allocated_useremail(std::string* value);

  private:
  const std::string& _internal_useremail() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_useremail(
      const std::string& value);
  std::string* _internal_mutable_useremail();

  public:
  // @@protoc_insertion_point(class_scope:email.UserRegisterEmail)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr useremail_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_email_2eproto;
};// -------------------------------------------------------------------

class RetrieveEmailReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:email.RetrieveEmailReply) */ {
 public:
  inline RetrieveEmailReply() : RetrieveEmailReply(nullptr) {}
  ~RetrieveEmailReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RetrieveEmailReply(::google::protobuf::internal::ConstantInitialized);

  inline RetrieveEmailReply(const RetrieveEmailReply& from)
      : RetrieveEmailReply(nullptr, from) {}
  RetrieveEmailReply(RetrieveEmailReply&& from) noexcept
    : RetrieveEmailReply() {
    *this = ::std::move(from);
  }

  inline RetrieveEmailReply& operator=(const RetrieveEmailReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline RetrieveEmailReply& operator=(RetrieveEmailReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RetrieveEmailReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const RetrieveEmailReply* internal_default_instance() {
    return reinterpret_cast<const RetrieveEmailReply*>(
               &_RetrieveEmailReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RetrieveEmailReply& a, RetrieveEmailReply& b) {
    a.Swap(&b);
  }
  inline void Swap(RetrieveEmailReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RetrieveEmailReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RetrieveEmailReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RetrieveEmailReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RetrieveEmailReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RetrieveEmailReply& from) {
    RetrieveEmailReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RetrieveEmailReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "email.RetrieveEmailReply";
  }
  protected:
  explicit RetrieveEmailReply(::google::protobuf::Arena* arena);
  RetrieveEmailReply(::google::protobuf::Arena* arena, const RetrieveEmailReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSendstateFieldNumber = 1,
  };
  // int32 sendstate = 1;
  void clear_sendstate() ;
  ::int32_t sendstate() const;
  void set_sendstate(::int32_t value);

  private:
  ::int32_t _internal_sendstate() const;
  void _internal_set_sendstate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:email.RetrieveEmailReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t sendstate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_email_2eproto;
};// -------------------------------------------------------------------

class RegisterEmailReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:email.RegisterEmailReply) */ {
 public:
  inline RegisterEmailReply() : RegisterEmailReply(nullptr) {}
  ~RegisterEmailReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterEmailReply(::google::protobuf::internal::ConstantInitialized);

  inline RegisterEmailReply(const RegisterEmailReply& from)
      : RegisterEmailReply(nullptr, from) {}
  RegisterEmailReply(RegisterEmailReply&& from) noexcept
    : RegisterEmailReply() {
    *this = ::std::move(from);
  }

  inline RegisterEmailReply& operator=(const RegisterEmailReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterEmailReply& operator=(RegisterEmailReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterEmailReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterEmailReply* internal_default_instance() {
    return reinterpret_cast<const RegisterEmailReply*>(
               &_RegisterEmailReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RegisterEmailReply& a, RegisterEmailReply& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterEmailReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterEmailReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterEmailReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterEmailReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterEmailReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterEmailReply& from) {
    RegisterEmailReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterEmailReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "email.RegisterEmailReply";
  }
  protected:
  explicit RegisterEmailReply(::google::protobuf::Arena* arena);
  RegisterEmailReply(::google::protobuf::Arena* arena, const RegisterEmailReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSendstateFieldNumber = 1,
  };
  // int32 sendstate = 1;
  void clear_sendstate() ;
  ::int32_t sendstate() const;
  void set_sendstate(::int32_t value);

  private:
  ::int32_t _internal_sendstate() const;
  void _internal_set_sendstate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:email.RegisterEmailReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t sendstate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_email_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// UserRegisterEmail

// string useremail = 1;
inline void UserRegisterEmail::clear_useremail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.useremail_.ClearToEmpty();
}
inline const std::string& UserRegisterEmail::useremail() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:email.UserRegisterEmail.useremail)
  return _internal_useremail();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserRegisterEmail::set_useremail(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.useremail_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:email.UserRegisterEmail.useremail)
}
inline std::string* UserRegisterEmail::mutable_useremail() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_useremail();
  // @@protoc_insertion_point(field_mutable:email.UserRegisterEmail.useremail)
  return _s;
}
inline const std::string& UserRegisterEmail::_internal_useremail() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.useremail_.Get();
}
inline void UserRegisterEmail::_internal_set_useremail(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.useremail_.Set(value, GetArena());
}
inline std::string* UserRegisterEmail::_internal_mutable_useremail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.useremail_.Mutable( GetArena());
}
inline std::string* UserRegisterEmail::release_useremail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:email.UserRegisterEmail.useremail)
  return _impl_.useremail_.Release();
}
inline void UserRegisterEmail::set_allocated_useremail(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.useremail_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.useremail_.IsDefault()) {
          _impl_.useremail_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:email.UserRegisterEmail.useremail)
}

// -------------------------------------------------------------------

// RegisterEmailReply

// int32 sendstate = 1;
inline void RegisterEmailReply::clear_sendstate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sendstate_ = 0;
}
inline ::int32_t RegisterEmailReply::sendstate() const {
  // @@protoc_insertion_point(field_get:email.RegisterEmailReply.sendstate)
  return _internal_sendstate();
}
inline void RegisterEmailReply::set_sendstate(::int32_t value) {
  _internal_set_sendstate(value);
  // @@protoc_insertion_point(field_set:email.RegisterEmailReply.sendstate)
}
inline ::int32_t RegisterEmailReply::_internal_sendstate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sendstate_;
}
inline void RegisterEmailReply::_internal_set_sendstate(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sendstate_ = value;
}

// -------------------------------------------------------------------

// UserRetrieveEmail

// string useremail = 1;
inline void UserRetrieveEmail::clear_useremail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.useremail_.ClearToEmpty();
}
inline const std::string& UserRetrieveEmail::useremail() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:email.UserRetrieveEmail.useremail)
  return _internal_useremail();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserRetrieveEmail::set_useremail(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.useremail_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:email.UserRetrieveEmail.useremail)
}
inline std::string* UserRetrieveEmail::mutable_useremail() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_useremail();
  // @@protoc_insertion_point(field_mutable:email.UserRetrieveEmail.useremail)
  return _s;
}
inline const std::string& UserRetrieveEmail::_internal_useremail() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.useremail_.Get();
}
inline void UserRetrieveEmail::_internal_set_useremail(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.useremail_.Set(value, GetArena());
}
inline std::string* UserRetrieveEmail::_internal_mutable_useremail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.useremail_.Mutable( GetArena());
}
inline std::string* UserRetrieveEmail::release_useremail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:email.UserRetrieveEmail.useremail)
  return _impl_.useremail_.Release();
}
inline void UserRetrieveEmail::set_allocated_useremail(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.useremail_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.useremail_.IsDefault()) {
          _impl_.useremail_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:email.UserRetrieveEmail.useremail)
}

// -------------------------------------------------------------------

// RetrieveEmailReply

// int32 sendstate = 1;
inline void RetrieveEmailReply::clear_sendstate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sendstate_ = 0;
}
inline ::int32_t RetrieveEmailReply::sendstate() const {
  // @@protoc_insertion_point(field_get:email.RetrieveEmailReply.sendstate)
  return _internal_sendstate();
}
inline void RetrieveEmailReply::set_sendstate(::int32_t value) {
  _internal_set_sendstate(value);
  // @@protoc_insertion_point(field_set:email.RetrieveEmailReply.sendstate)
}
inline ::int32_t RetrieveEmailReply::_internal_sendstate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sendstate_;
}
inline void RetrieveEmailReply::_internal_set_sendstate(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sendstate_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace email


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_email_2eproto_2epb_2eh
